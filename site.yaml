
- hosts: all
  gather_facts: yes
  become: yes
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes

    - name: Upgrade packages
      apt:
        upgrade: yes
        autoremove: yes
        autoclean: yes
# Installs and configures haproxy on the haproxy host
- hosts: haproxy
  become: yes
  tasks:
    - name: Install haproxy
      apt:
        name: haproxy
        state: present
      notify: restart haproxy

    - name: Configure haproxy
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg.j2
      notify: restart haproxy
  handlers:
    - name: restart haproxy
      service:
        name: haproxy
        state: restarted
# Deploys and tests the flask app on webservers
- hosts: DevA,DevB,DevC
  become: yes
  tasks:
    
    - name: install python3
      apt:
        name: python3
        state: latest

    - name: install python3-pip
      apt:
         name: python3-pip
         state: latest
    - name: create a new directory
      file:
        path: /home/ubuntu/flask-app
        state: directory
        owner: ubuntu
        group: ubuntu

    - name: change directory to flask-app
      shell: cd /home/ubuntu/flask-app

    - name: Install Flask in virtual environment
      pip:
        name: flask
        state: present
    - name: Install python3-venv package
      become: true
      apt:
        name: python3-venv
        state: present
    - name: create virtual environment
      shell: python3.8 -m venv /home/ubuntu/flask-app/venv

    - name: create virtual environment directory
      file:
        path: /home/ubuntu/flask-app/venv
        state: directory
        owner: ubuntu
        group: ubuntu

    - name: activate virtual environment
      become: yes
      become_user: ubuntu
      shell: . /home/ubuntu/flask-app/venv/bin/activate
      args:
        chdir: /home/ubuntu/flask-app

    - name: copy the flask app code to the servers
      copy:
        src:  app.py
        dest: /home/ubuntu/flask-app/venv/app.py
        mode: 0775

    - name: execute the flask-app deployment
      shell: flask run -h 0.0.0.0 -p 5000
      async: 500
      poll: 0
- hosts: haproxy
  become: yes
  tasks:  
    - name: Test haproxy
      uri:
        url: "http://{{ hostvars[item]['ansible_default_ipv4']['address']
}}:5000/"
        method: GET
        return_content: yes
      register: result  
      loop:
        - DevA
        - DevB
        - DevC
      failed_when: result.status != 200
 

